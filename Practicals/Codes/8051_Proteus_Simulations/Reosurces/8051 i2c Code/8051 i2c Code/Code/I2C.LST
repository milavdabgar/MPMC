C51 COMPILER V9.02   I2C                                                                   11/06/2012 00:12:45 PAGE 1   


C51 COMPILER V9.02, COMPILATION OF MODULE I2C
OBJECT MODULE PLACED IN I2C.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE I2C.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include "Includes.h"
   2          
   3          // Function Purpose: Produce approximate delay in given uSecs.
   4          void __delay_us(unsigned int d)
   5          {
   6   1         unsigned int i, limit;
   7   1         limit = d/15;
   8   1      
   9   1         for(i=0;i<limit;i++);
  10   1      }
  11          
  12          
  13          // Function Purpose: Set initial values of SCK and SDA pins
  14          void InitI2C(void)
  15          {       
  16   1              // Make SDA and SCK pins input initially
  17   1              SDA = 1;
  18   1              SCK = 1;
  19   1      }
  20          
  21          
  22          // Function Purpose: I2C_Start sends start bit sequence
  23          void I2C_Start(void)
  24          {
  25   1              Set_SCK_High;                           // Make SCK pin high
  26   1              Set_SDA_High;                           // Make SDA pin High
  27   1              __delay_us(HalfBitDelay);       // Half bit delay
  28   1              Set_SDA_Low;                            // Make SDA Low
  29   1              __delay_us(HalfBitDelay);       // Half bit delay
  30   1      }
  31          
  32          
  33          // Function Purpose: I2C_ReStart sends start bit sequence
  34          void I2C_ReStart(void)
  35          {
  36   1              Set_SCK_Low;                            // Make SCK pin low
  37   1      
  38   1              __delay_us(HalfBitDelay/2);     // Data pin should change it's value,
  39   1                                                                      // when it is confirm that SCK is low
  40   1              Set_SDA_High;                           // Make SDA pin High
  41   1              
  42   1              __delay_us(HalfBitDelay/2);     // 1/4 bit delay
  43   1              Set_SCK_High;                           // Make SCK pin high
  44   1              __delay_us(HalfBitDelay/2);     // 1/4 bit delay
  45   1              Set_SDA_Low;                            // Make SDA Low
  46   1              __delay_us(HalfBitDelay/2);     // 1/4 bit delay
  47   1      }
  48          
  49          
  50          //Function : I2C_Stop sends stop bit sequence
  51          void I2C_Stop(void)
  52          {
  53   1              Set_SCK_Low;                            // Make SCK pin low
  54   1      
  55   1              __delay_us(HalfBitDelay/2);     // Data pin should change it's value,
C51 COMPILER V9.02   I2C                                                                   11/06/2012 00:12:45 PAGE 2   

  56   1                                                                      // when it is confirm that SCK is low
  57   1              Set_SDA_Low;                            // Make SDA pin low
  58   1              
  59   1              __delay_us(HalfBitDelay/2);     // 1/4 bit delay
  60   1              Set_SCK_High;                           // Make SCK pin high
  61   1              __delay_us(HalfBitDelay/2);     // 1/4 bit delay
  62   1              Set_SDA_High;                           // Make SDA high
  63   1              __delay_us(HalfBitDelay/2);     // 1/4 bit delay
  64   1      }
  65          
  66          
  67          
  68          //Function : I2C_Send_ACK sends ACK bit sequence
  69          void I2C_Send_ACK(void)
  70          {
  71   1              Set_SCK_Low;                            // Make SCK pin low
  72   1              __delay_us(HalfBitDelay/2);     // Data pin should change it's value,
  73   1                                                                      // when it is confirm that SCK is low
  74   1              Set_SDA_Low;                            // Make SDA Low
  75   1              __delay_us(HalfBitDelay/2);     // 1/4 bit delay
  76   1              Set_SCK_High;                           // Make SCK pin high
  77   1              __delay_us(HalfBitDelay);       // Half bit delay
  78   1      }
  79          
  80          
  81          //Function : I2C_Send_NACK sends NACK bit sequence
  82          void I2C_Send_NACK(void)
  83          {
  84   1              Set_SCK_Low;                            // Make SCK pin low
  85   1              __delay_us(HalfBitDelay/2);     // Data pin should change it's value,
  86   1                                                                      // when it is confirm that SCK is low
  87   1              Set_SDA_High;                           // Make SDA high
  88   1              __delay_us(HalfBitDelay/2);     // 1/4 bit delay
  89   1              Set_SCK_High;                           // Make SCK pin high
  90   1              __delay_us(HalfBitDelay);       // Half bit delay
  91   1      }
  92          
  93          
  94          // Function Purpose: I2C_Write_Byte transfers one byte
  95          bit I2C_Write_Byte(unsigned char Byte)
  96          {
  97   1              unsigned char i;                // Variable to be used in for loop
  98   1              
  99   1              for(i=0;i<8;i++)                // Repeat for every bit
 100   1              {
 101   2                      Set_SCK_Low;            // Make SCK pin low
 102   2                      
 103   2                      __delay_us(HalfBitDelay/2);     // Data pin should change it's value,
 104   2                                                                              // when it is confirm that SCK is low
 105   2      
 106   2                      if((Byte<<i)&0x80)  // Place data bit value on SDA pin
 107   2                              Set_SDA_High;   // If bit is high, make SDA high
 108   2                      else                            // Data is transferred MSB first
 109   2                              Set_SDA_Low;    // If bit is low, make SDA low
 110   2      
 111   2                      __delay_us(HalfBitDelay/2);     // Toggle SCK pin
 112   2                      Set_SCK_High;                           // So that slave can
 113   2                      __delay_us(HalfBitDelay);       // latch data bit
 114   2          }
 115   1                      
 116   1              // Get ACK from slave
 117   1              Set_SCK_Low;
C51 COMPILER V9.02   I2C                                                                   11/06/2012 00:12:45 PAGE 3   

 118   1          Set_SDA_High;
 119   1          __delay_us(HalfBitDelay);
 120   1          Set_SCK_High;
 121   1          __delay_us(HalfBitDelay);
 122   1      
 123   1              return SDA;
 124   1      }
 125          
 126          
 127          // Function Purpose: I2C_Read_Byte reads one byte
 128          unsigned char I2C_Read_Byte(void)
 129          {
 130   1              unsigned char i, d, RxData = 0;
 131   1      
 132   1              for(i=0;i<8;i++)
 133   1              {
 134   2                      Set_SCK_Low;                                    // Make SCK pin low
 135   2                      Set_SDA_High;                                   // Don't drive SDA 
 136   2                      __delay_us(HalfBitDelay);               // Half bit delay
 137   2                      Set_SCK_High;                                   // Make SCK pin high
 138   2                      __delay_us(HalfBitDelay/2);             // 1/4 bit delay
 139   2                      d = SDA;                                            // Capture Received Bit
 140   2                      RxData = RxData|(d<<(7-i));     // Copy it in RxData
 141   2                      __delay_us(HalfBitDelay/2);             // 1/4 bit delay
 142   2              }
 143   1       
 144   1          return RxData;                                              // Return received byte
 145   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    252    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
