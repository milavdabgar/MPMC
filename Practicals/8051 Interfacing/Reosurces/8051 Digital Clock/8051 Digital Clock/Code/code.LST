C51 COMPILER V9.54   CODE                                                                  08/02/2018 14:54:10 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE CODE
OBJECT MODULE PLACED IN code.OBJ
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE code.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          // ***********************************************************
   2          // Project:   Digital Clock
   3          // Author:    M.Saeed Yasin
   4          // Module description:  Make a digital clock display using LCD
   5          // ***********************************************************
   6          
   7          #include<reg51.h>
   8          
   9          //Function declarations
  10          void cct_init(void);
  11          void delay(int);
  12          void lcdinit(void);
  13          void WriteCommandToLCD(int);
  14          void WriteDataToLCD(char);
  15          void ClearLCDScreen(void);
  16          void InitTimer0(void);
  17          void UpdateTimeCounters(void);
  18          void DisplayTimeToLCD(unsigned int,unsigned int,unsigned int);
  19          
  20          //*******************
  21          //Pin description
  22          /*
  23          P2.4 to P2.7 is data bus
  24          P1.0 is RS
  25          P1.1 is E
  26          */
  27          //********************
  28          
  29          // Defines Pins
  30          sbit RS = P2^2;//P1^0;
  31          sbit E  = P2^3;//P1^1;
  32          
  33          // Define Clock variables
  34          unsigned int usecCounter = 0;
  35          unsigned int msCounter   = 0;
  36          unsigned int secCounter  = 0;
  37          unsigned int minCounter  = 0;
  38          unsigned int hrCounter   = 0;
  39          
  40          
  41          
  42          // ***********************************************************
  43          // Main program
  44          //
  45          void main(void)
  46          {
  47   1         cct_init();             // Make all ports zero
  48   1         lcdinit();              // Initilize LCD
  49   1         InitTimer0();           // Start Timer0
  50   1            
  51   1        while(1)
  52   1        {
  53   2          if( msCounter == 0 )                                       // msCounter becomes zero after exact one sec
  54   2          {
  55   3            DisplayTimeToLCD(hrCounter, minCounter, secCounter);   // Displays time in HH:MM:SS format
C51 COMPILER V9.54   CODE                                                                  08/02/2018 14:54:10 PAGE 2   

  56   3          }
  57   2      
  58   2          UpdateTimeCounters();                                      // Update sec, min, hours counters
  59   2          }
  60   1      }
  61          
  62          
  63          void cct_init(void)
  64          {
  65   1        P0 = 0x00;   //not used 
  66   1        P1 = 0x00;   //not used 
  67   1        P2 = 0x00;   //used as data port
  68   1        P3 = 0x00;   //used for generating E and RS
  69   1      }
  70          
  71          
  72          void InitTimer0(void)
  73          {
  74   1        TMOD &= 0xF0;    // Clear 4bit field for timer0
  75   1        TMOD |= 0x02;    // Set timer0 in mode 2
  76   1        
  77   1        TH0 = 0x05;      // 250 usec reloading time//0x05
  78   1        TL0 = 0x05;      // First time value//0x05
  79   1        
  80   1        ET0 = 1;         // Enable Timer0 interrupts
  81   1        EA  = 1;         // Global interrupt enable
  82   1        
  83   1        TR0 = 1;         // Start Timer 0
  84   1      }
  85          
  86          
  87          void Timer0_ISR (void) interrupt 1     // It is called after every 250usec
  88          {
  89   1        usecCounter = usecCounter + 250;   // Count 250 usec
  90   1        
  91   1        if(usecCounter==1000)              // 1000 usec means 1msec 
  92   1        {
  93   2          msCounter++;
  94   2          usecCounter = 0;
  95   2        }
  96   1      
  97   1        TF0 = 0;     // Clear the interrupt flag
  98   1      }
  99          
 100          
 101          void UpdateTimeCounters(void)
 102          {
 103   1        if (msCounter==1000)
 104   1        {
 105   2          secCounter++;
 106   2          msCounter=0;
 107   2        }
 108   1      
 109   1        if(secCounter==60)
 110   1        {
 111   2          minCounter++;
 112   2          secCounter=0;
 113   2        }
 114   1      
 115   1        if(minCounter==60)
 116   1        {
 117   2          hrCounter++;
C51 COMPILER V9.54   CODE                                                                  08/02/2018 14:54:10 PAGE 3   

 118   2          minCounter=0;
 119   2        }
 120   1      
 121   1        if(hrCounter==24)
 122   1        {
 123   2          hrCounter = 0;
 124   2        }
 125   1      }
 126          
 127          
 128          void DisplayTimeToLCD( unsigned int h, unsigned int m, unsigned int s )   // Displays time in HH:MM:SS for
             -mat
 129          {
 130   1        ClearLCDScreen();      // Move cursor to zero location and clear screen
 131   1      
 132   1        // Display Hour
 133   1        WriteDataToLCD( (h/10)+0x30 );
 134   1        WriteDataToLCD( (h%10)+0x30 );
 135   1      
 136   1        //Display ':'
 137   1        WriteDataToLCD(':');
 138   1      
 139   1        //Display Minutes
 140   1        WriteDataToLCD( (m/10)+0x30 );
 141   1        WriteDataToLCD( (m%10)+0x30 );
 142   1      
 143   1        //Display ':'
 144   1        WriteDataToLCD(':');
 145   1      
 146   1        //Display Seconds
 147   1        WriteDataToLCD( (s/10)+0x30 );
 148   1        WriteDataToLCD( (s%10)+0x30 );
 149   1      }
 150          
 151          
 152          void delay(int a)
 153          {
 154   1         int i;
 155   1         for(i=0;i<a;i++);   //null statement
 156   1      }
 157          
 158          void WriteDataToLCD(char t)
 159          {
 160   1         RS = 1;             // This is data
 161   1      
 162   1         P2 &= 0x0F;       // Make P2.4 to P2.7 zero
 163   1         P2 |= (t&0xF0);     // Write Upper nibble of data
 164   1      
 165   1         E  = 1;             // => E = 1
 166   1         delay(150);
 167   1         E  = 0;             // => E = 0
 168   1         delay(150);
 169   1      
 170   1         P2 &= 0x0F;       // Make P2.4 to P2.7 zero
 171   1         P2 |= ((t<<4)&0xF0);// Write Lower nibble of data
 172   1      
 173   1         E  = 1;             // => E = 1
 174   1         delay(150);
 175   1         E  = 0;             // => E = 0
 176   1         delay(150);
 177   1      }
 178          
C51 COMPILER V9.54   CODE                                                                  08/02/2018 14:54:10 PAGE 4   

 179          
 180          void WriteCommandToLCD(int z)
 181          {
 182   1         RS = 0;             // This is command
 183   1      
 184   1         P2 &= 0x0F;       // Make P2.4 to P2.7 zero
 185   1         P2 |= (z&0xF0);     // Write Upper nibble of data
 186   1      
 187   1         E  = 1;             // => E = 1
 188   1         delay(150);
 189   1         E  = 0;             // => E = 0
 190   1         delay(150);
 191   1      
 192   1         P2 &= 0x0F;       // Make P2.4 to P2.7 zero
 193   1         P2 |= ((z<<4)&0xF0);// Write Lower nibble of data
 194   1      
 195   1         E  = 1;             // => E = 1
 196   1         delay(150);
 197   1         E  = 0;             // => E = 0
 198   1         delay(150);
 199   1      }
 200          
 201          void lcdinit(void)
 202          {
 203   1        ///////////// Reset process from datasheet /////////
 204   1           delay(15000);
 205   1      
 206   1         P2 &= 0x0F;       // Make P2.4 to P2.7 zero
 207   1         P2 |= (0x30&0xF0);    // Write 0x3
 208   1        
 209   1         E  = 1;               // => E = 1
 210   1         delay(150);
 211   1         E  = 0;               // => E = 0
 212   1         delay(150);
 213   1      
 214   1           delay(4500);
 215   1      
 216   1         P2 &= 0x0F;       // Make P2.4 to P2.7 zero
 217   1         P2 |= (0x30&0xF0);    // Write 0x3
 218   1        
 219   1         E  = 1;               // => E = 1
 220   1         delay(150);
 221   1         E  = 0;               // => E = 0
 222   1         delay(150);
 223   1      
 224   1           delay(300);
 225   1      
 226   1         P2 &= 0x0F;       // Make P2.4 to P2.7 zero
 227   1         P2 |= (0x30&0xF0);    // Write 0x3
 228   1        
 229   1         E  = 1;               // => E = 1
 230   1         delay(150);
 231   1         E  = 0;               // => E = 0
 232   1         delay(150);
 233   1      
 234   1           delay(650);
 235   1      
 236   1         P2 &= 0x0F;       // Make P2.4 to P2.7 zero
 237   1         P2 |= (0x20&0xF0);    // Write 0x2
 238   1        
 239   1         E  = 1;               // => E = 1
 240   1         delay(150);
C51 COMPILER V9.54   CODE                                                                  08/02/2018 14:54:10 PAGE 5   

 241   1         E  = 0;               // => E = 0
 242   1         delay(150);
 243   1      
 244   1         delay(650);
 245   1      
 246   1        /////////////////////////////////////////////////////
 247   1         WriteCommandToLCD(0x28);    //function set
 248   1         WriteCommandToLCD(0x0c);    //display on,cursor off,blink off
 249   1         WriteCommandToLCD(0x01);    //clear display
 250   1         WriteCommandToLCD(0x06);    //entry mode, set increment
 251   1      }
 252          
 253          void ClearLCDScreen(void)
 254          {
 255   1        WriteCommandToLCD(0x01);   // Clear screen command
 256   1        delay(1000);
 257   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    516    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     10       6
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
