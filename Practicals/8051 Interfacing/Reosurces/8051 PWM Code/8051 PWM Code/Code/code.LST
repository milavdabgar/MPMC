C51 COMPILER V9.54   CODE                                                                  04/12/2016 10:42:43 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE CODE
OBJECT MODULE PLACED IN code.OBJ
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE code.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          /*  Name     : code.c
   2           *  Purpose  : Main file for generating pwm using 8051.
   3           *  Author   : M.Saeed Yasin
   4           *  Date     : 13-06-12
   5           *  Revision : None
   6           */
   7          #include<reg52.h>
   8          
   9          // PWM_Pin
  10          sbit PWM_Pin = P2^0;       // Pin P2.0 is named as PWM_Pin
  11          
  12          // Function declarations
  13          void cct_init(void);
  14          void InitTimer0(void);
  15          void InitPWM(void);
  16          
  17          // Global variables
  18          unsigned char PWM = 0;    // It can have a value from 0 (0% duty cycle) to 255 (100% duty cycle)
  19          unsigned int temp = 0;    // Used inside Timer0 ISR
  20          
  21          // PWM frequency selector
  22          /* PWM_Freq_Num can have values in between 1 to 257 only
  23           * When PWM_Freq_Num is equal to 1, then it means highest PWM frequency
  24           * which is approximately 1000000/(1*255) = 3.9kHz
  25           * When PWM_Freq_Num is equal to 257, then it means lowest PWM frequency
  26           * which is approximately 1000000/(257*255) = 15Hz
  27           *
  28           * So, in general you can calculate PWM frequency by using the formula
  29           *     PWM Frequency = 1000000/(PWM_Freq_Num*255)
  30           */
  31          #define PWM_Freq_Num   2   // Highest possible PWM Frequency
  32          
  33          
  34          // Main Function
  35          int main(void)
  36          {
  37   1         cct_init();           // Make all ports zero
  38   1         InitPWM();              // Start PWM
  39   1       
  40   1         PWM = 127;              // Make 50% duty cycle of PWM  -> 127
  41   1      
  42   1         while(1)                // Rest is done in Timer0 interrupt
  43   1         {}
  44   1      }
  45          
  46          // Init CCT function
  47          void cct_init(void)
  48          {
  49   1        P0 = 0x00;   
  50   1        P1 = 0x00;   
  51   1        P2 = 0x00;   
  52   1        P3 = 0x00;  
  53   1      }
  54          
  55          // Timer0 initialize
C51 COMPILER V9.54   CODE                                                                  04/12/2016 10:42:43 PAGE 2   

  56          void InitTimer0(void)
  57          {
  58   1        TMOD &= 0xF0;    // Clear 4bit field for timer0
  59   1        TMOD |= 0x01;    // Set timer0 in mode 1 = 16bit mode
  60   1        
  61   1        TH0 = 0x00;      // First time value
  62   1        TL0 = 0x00;      // Set arbitrarily zero
  63   1        
  64   1        ET0 = 1;         // Enable Timer0 interrupts
  65   1        EA  = 1;         // Global interrupt enable
  66   1        
  67   1        TR0 = 1;         // Start Timer 0
  68   1      }
  69          
  70          // PWM initialize
  71          void InitPWM(void)
  72          {
  73   1        PWM = 0;         // Initialize with 0% duty cycle
  74   1        InitTimer0();    // Initialize timer0 to start generating interrupts
  75   1                 // PWM generation code is written inside the Timer0 ISR
  76   1      }
  77          
  78          // Timer0 ISR
  79          void Timer0_ISR (void) interrupt 1   
  80          {
  81   1        TR0 = 0;    // Stop Timer 0
  82   1      
  83   1        if(PWM_Pin) // if PWM_Pin is high
  84   1        {
  85   2          PWM_Pin = 0;
  86   2          temp = (255-PWM)*PWM_Freq_Num;
  87   2          TH0  = 0xFF - (temp>>8)&0xFF;
  88   2          TL0  = 0xFF - temp&0xFF;  
  89   2        }
  90   1        else       // if PWM_Pin is low
  91   1        {
  92   2          PWM_Pin = 1;
  93   2          temp = PWM*PWM_Freq_Num;
  94   2          TH0  = 0xFF - (temp>>8)&0xFF;
  95   2          TL0  = 0xFF - temp&0xFF;
  96   2        }
  97   1      
  98   1        TF0 = 0;     // Clear the interrupt flag
  99   1        TR0 = 1;     // Start Timer 0
 100   1      }
 101          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    130    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      3    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
